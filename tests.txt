============================= test session starts ==============================
platform linux -- Python 3.12.1, pytest-8.3.5, pluggy-1.5.0
rootdir: /workspaces/SCP-Text-Game
plugins: anyio-4.9.0, cov-6.1.0
collected 29 items

tests/test_enums.py ...........                                          [ 37%]
tests/test_main_game.py F                                                [ 41%]
tests/test_main_menu.py ......                                           [ 62%]
tests/test_models.py .....                                               [ 79%]
tests/test_opening_scene.py .                                            [ 82%]
tests/test_utilities.py .....                                            [100%]

=================================== FAILURES ===================================
___________________________ test_start_new_game_flow ___________________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x72bb91388c20>
capsys = <_pytest.capture.CaptureFixture object at 0x72bb91389490>

    def test_start_new_game_flow(monkeypatch: MonkeyPatch, capsys: CaptureFixture) -> None:
        """
        Tests the start_new_game function's execution flow:
        - Calls opening_scene_start (mocked).
        - Clears screen (mocked).
        - Calls display_text_sequentially for the memo (mocked).
        - Waits for acknowledgement input (mocked).
        - Runs without error and prints debug message.
        """
        # Arrange: Mock dependencies
        mock_opening = Mock(spec=opening_scene.opening_scene_start)
        mock_clear = Mock(spec=utilities.clear_screen)
        mock_display_seq = Mock(spec=utilities.display_text_sequentially)
    
        monkeypatch.setattr(opening_scene, "opening_scene_start", mock_opening)
        monkeypatch.setattr(utilities, "clear_screen", mock_clear)
        monkeypatch.setattr(utilities, "display_text_sequentially", mock_display_seq)
    
        # Mock input for acknowledgement
        inputs: Iterator[str] = iter([''])
        def mock_input_that_prints(prompt: Optional[str] = None) -> str:
            if prompt:
                print(prompt, end='') # type: ignore
            try:
                return next(inputs)
            except StopIteration:
                raise EOFError("Mock input called too many times.")
        monkeypatch.setattr('builtins.input', mock_input_that_prints)
    
        # Act: Run the function to be tested
        try:
            main_game.start_new_game()
        except Exception as e:
            pytest.fail(f"main_game.start_new_game() raised an exception: {e}")
    
        # Assert: Verify mocks were called and correct arguments passed
        captured = capsys.readouterr()
    
        mock_opening.assert_called_once()
        mock_clear.assert_called_once()
        # Check that display_text_sequentially was called with the memo
        mock_display_seq.assert_called_once_with(BriefingMessages.FINCH_MEMO_CHIMERA)
    
        # Check that the acknowledgement prompt was printed by the mock input
        assert "Press Enter to acknowledge briefing..." in captured.out
    
        # Check that the final debug message is printed (output after mocks)
>       assert "[DEBUG: Proceeding to Thorne's residence - To be implemented]" in captured.out
E       assert "[DEBUG: Proceeding to Thorne's residence - To be implemented]" in '\nPress Enter to acknowledge briefing...\nWhat would you like to do? \nAn error occurred: Mock input called too many times.\n'
E        +  where '\nPress Enter to acknowledge briefing...\nWhat would you like to do? \nAn error occurred: Mock input called too many times.\n' = CaptureResult(out='\nPress Enter to acknowledge briefing...\nWhat would you like to do? \nAn error occurred: Mock input called too many times.\n', err='').out

tests/test_main_game.py:68: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    src.main_game:main_game.py:188 Error in main game loop: Mock input called too many times.
=========================== short test summary info ============================
FAILED tests/test_main_game.py::test_start_new_game_flow - assert "[DEBUG: Pr...
========================= 1 failed, 28 passed in 0.11s =========================
